name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  # Позволяет запускать деплой руками из вкладки Actions
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Не держим параллельные деплои
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  BUILD_DIR: dist
  # ВАЖНО: если переименуешь репозиторий — поменяй путь ниже
  PAGES_BASE_PATH: '/test-full/'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        # Если нет package-lock.json, fallback на npm install
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build (Vite)
        # Пробрасываем base, чтобы ассеты собирались в подпапку /test-full/
        run: npm run build -- --base=${{ env.PAGES_BASE_PATH }}

      - name: Copy legacy /images into build (optional)
        # Если у тебя есть папка images/ (НЕ в public/), копируем её в би
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  # Позволяет запускать деплой руками из вкладки Actions
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Не держим параллельные деплои
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  BUILD_DIR: dist
  # ВАЖНО: если переименуешь репозиторий — поменяй путь ниже
  PAGES_BASE_PATH: '/test-full/'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        # Если нет package-lock.json, fallback на npm install
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build (Vite)
        # Пробрасываем base, чтобы ассеты собирались в подпапку /test-full/
        run: npm run build -- --base=${{ env.PAGES_BASE_PATH }}

      - name: Copy legacy /images into build (optional)
        # Если у тебя есть папка images/ (НЕ в public/), копируем её в би
